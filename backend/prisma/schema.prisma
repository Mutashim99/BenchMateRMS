
generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
  directUrl = env("DIRECT_URL")
}

model User{
  id String @id @default(cuid())
  name String 
  email String @unique
  password String 
  isEmailVerified Boolean @default(false)
  institute String
  major String

  resources   Resource[]
  hypes       Hype[]
  comments    Comment[]

  createdAt   DateTime    @default(now())
}

model Resource{
  id String @id @default(cuid())
  title         String
  description   String
  fileUrl       String

  uploader      User       @relation(fields: [uploaderId], references: [id])
  uploaderId    String

  university    String?
  department    String?
  semester      Int?
  courseCode    String?
  courseName    String?
  resourceType  String?   // e.g. "Notes", "Slides", "Assignments"

  hypes         Hype[]
  comments      Comment[]

  views         Int        @default(0)
  downloads     Int        @default(0)
  createdAt     DateTime   @default(now())
}

model Hype {
  id          String    @id @default(cuid())

  user        User      @relation(fields: [userId], references: [id])
  userId      String

  resource    Resource  @relation(fields: [resourceId], references: [id])
  resourceId  String

  createdAt   DateTime  @default(now())

  @@unique([userId, resourceId]) // 1 hype per user per resource
}

model Comment{
  id String @id @default(cuid())
  content String

  user        User      @relation(fields: [userId], references: [id])
  userId      String

  resource    Resource  @relation(fields: [resourceId], references: [id])
  resourceId  String

  createdAt   DateTime  @default(now())

}

model EmailVerification {
  id        String   @id @default(cuid())
  email     String   @unique
  otp       String
  expiresAt DateTime
  createdAt DateTime @default(now())
}
